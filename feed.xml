<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://mseryn.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mseryn.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-09-27T17:29:12+00:00</updated><id>https://mseryn.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">K and R - The C Answer Book</title><link href="https://mseryn.github.io/blog/2023/knr/" rel="alternate" type="text/html" title="K and R - The C Answer Book"/><published>2023-09-08T15:10:00+00:00</published><updated>2023-09-08T15:10:00+00:00</updated><id>https://mseryn.github.io/blog/2023/knr</id><content type="html" xml:base="https://mseryn.github.io/blog/2023/knr/"><![CDATA[<h1 id="the-c-programming-language">The C Programming Language</h1> <h2 id="by-kernighan-and-ritchie">by Kernighan and Ritchie</h2> <h3 id="reviewed-september-2023">Reviewed September 2023</h3> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> This book: <ul> <li>Stands the test of time</li> <li>Respects the reader</li> <li>while still being approachable</li> <li>Has examples, examples, and more examples</li> </ul> Expected read-time is <strong>10-20 hours</strong> -- it really depends on your experience and comfort with C. </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/kandr-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/kandr-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/kandr-1400.webp"/> <img src="/assets/img/kandr.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="disclaimer">Disclaimer</h3> <p><strong>Please remember this book was published in 1988!</strong></p> <p>It’s absolutely fabulous as an intro. Some of the advanced topics are out of date, however, and some of the practices are outdated.</p> <p>An example is <em>putting all variable declarations at the top of a file</em> - this is now an anti-pattern as it ineffectively uses memory. It had a place in the past, but no longer. Another example is <em>declaring variables in if/else-if statements</em> - this is also not recommended, as it causes unexpected side-effects and can be hard to read. A better method is to define variables as-needed around if/else-if statements and use the variables. Exceptions, of course, are made for loop-contained variables, especially indices and similar in for/while loops. In general though, <em>don’t have your code have side-effects</em>!</p> <p>The K&amp;R was written by the people who designed and wrote C. These people are legends! And their insight into their language is amazing. So do read the book! But remember - it’s not the end-all.</p> <p>That said, here’s a short reading guide:</p> <h3 id="chapters-1-2-3-and-4">Chapters 1, 2, 3, and 4</h3> <p>are your basics of C. Syntax, types, loops, functions, and basic compilation - you’ll do a hello-world here, for example.</p> <h4 id="pitfall-topics">Pitfall topics:</h4> <ul> <li> <p>Variables and scope are easy mess up in C, and the resulting errors can be a <em>hassle</em> to identify.</p> </li> <li> <p>Keep in mind your use of static – and how it differs if it’s <em>inside</em> a block vs applied to a declaration or global!</p> </li> <li> <p>Dig around in the compilation process – take a look at the results of preprocessing (gcc -E), at the object dump from your assembling (gcc -c, then objdump -d file.o), and at the object dump from your linked executable.</p> </li> </ul> <h3 id="chapter-5">Chapter 5</h3> <p>is pointers! Grab your towel and Don’t Panic. This is a well-paced walkthrough, give it a slow and purposeful read.</p> <h4 id="pitfall-topics-1">Pitfall topics:</h4> <ul> <li> <p>are just what you’d expect – pointers are easy to mess up and hard to debug.</p> </li> <li> <p>Remember – &amp;variable gives you the address, *variable gives you the value at a pointer, and * in a declaration indicates a pointer.</p> </li> <li> <p>C is pass-by-value! So everything is pointers - or pointers-to-pointers, even.</p> </li> <li> <p>Array notation and pointer notation are mostly interchangeable – and as long as the compiler is made aware of the type the pointer references, adding to a pointer will move sizeof() !</p> </li> </ul> <h3 id="chapter-6">Chapter 6</h3> <p>is structures - in the age of object-oriented-everything, structs should be pretty conceptually comfy.</p> <h4 id="pitfall-topics-2">Pitfall topics:</h4> <ul> <li>Self-referential structs require careful malloc/free – the compiler can’t be expected to know how large an object is when it contains itself, after all!</li> </ul> <h3 id="chapter-7-and-8">Chapter 7 and 8</h3> <p>cover I/O and UNIX system interfacing. These chapters are very <em>useful</em> but often outdated – not usually incorrect, but there are many modern developments that ease the more tricky topics in these chapters. That said, <em>do</em> read them, as they cover the extreme-basics. The examples in chapter 8 are especially informative. Set aside time to walk through these - maybe even try running them yourself, they’re that decent.</p> <h3 id="remaining-contents">Remaining contents</h3> <p>are appendices including libraries and references manuals. I find these chapters are a good skim - but I have trouble remembering these hyper-detailed tidbits out of context/use. I did enjoy skimming, though - some of the referenced materials are weird! Especially some of the more esotheric operators.</p> <p>Additionally, the Standard Library appendix does have some useful tables for printf/scanf formatting options. These are always nice to have handy to flip open.</p>]]></content><author><name></name></author><category term="book-reviews"/><category term="book-review"/><category term="teaching-materials"/><summary type="html"><![CDATA[The K and R book is awesome - I've reread it to teach a course!]]></summary></entry></feed>